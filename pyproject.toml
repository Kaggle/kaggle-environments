[project]
name = "kaggle-environments"
version = "1.22.15"
description = "Kaggle Environments"
authors = [
    {name = "Kaggle", email = "support@kaggle.com"},
]
dependencies = [
    "accelerate",
    "bitsandbytes",
    "Flask >= 1.1.2",
    "gymnasium == 1.2.0",
    "gymnax==0.0.8",
    "jax",
    "jsonschema >= 3.0.1",
    "litellm",
    "numpy >= 2.2.6",
    "open_spiel >= 1.6.8",
    "pettingzoo == 1.24.0",
    "pokerkit==0.6.3",
    "pydantic >= 2.11.4",
    "pygame",
    "pyjson5",
    "termcolor",
    "requests >= 2.25.1",
    "shimmy >= 1.2.1",
    "stable-baselines3 == 2.7.0",
    "transformers >= 4.33.1",
    "tenacity",
    "google-auth >= 2.35.0"
]
requires-python = ">=3.10"

[dependency-groups]
dev = [
    "flit",
    "ipython",
    "python-dotenv",
    "pytest",
    "PyYAML",
    "ruff",
    "uv",
]

readme = ["README.md"]
license = ["LICENSE"]
keywords = ["Kaggle"]

[project.urls]
Homepage = "https://github.com/Kaggle/kaggle-environments"

[project.scripts]
kaggle-environments = "kaggle_environments.main:main"

[build-system]
requires = ["flit_core >=3.8,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.module]
name = "kaggle_environments"

# Flit specific options (files to exclude from the PyPI package).
# If using another build backend (setuptools, poetry), you can remove this
# section.
[tool.flit.sdist]
exclude = [
  # Do not release tests files on PyPI
  "**/*_test.py",
  "**/node_modules/",
]

[tool.setuptools.dynamic]
version = {attr = "kaggle_environments.__version__"}

[tool.ruff]
target-version = "py311"
line-length = 120
indent-width = 4

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint]
# sort imports
extend-select = ["I"]

ignore = [
    # zip() without strict=True is fine for this codebase's Python version.
    "B905",
    # The following docstring rules are disabled to avoid overwhelming errors
    # on the existing codebase. It's recommended to enable them gradually.
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D107", # Missing docstring in __init__
]

{
    "name": "werewolf",
    "version": "1.0.0",
    "title": "Werewolf",
    "description": "A social deduction game.",
    "agents": [7, 8, 9, 10, 11, 12, 13, 14, 15],
    "configuration": {
        "episodeSteps": { "type": "integer", "default": 1000 },
        "actTimeout": { "type": "number", "default": 3 },
        "runTimeout": { "type": "number", "default": 1800 },
        "seed": { "type": "integer", "description": "Seed to use for episodes" },
        "night_elimination_reveal_level": {
            "type": "string",
            "enum": ["no_reveal", "team", "role"],
            "default": "role",
            "description": "During night elimination, the moderator should reveal this level of information about the eliminated player."
        },
        "day_exile_reveal_level": {
          "type": "string",
            "enum": ["no_reveal", "team", "role"],
            "default": "role",
            "description": "During day exile, the moderator should reveal this level of information about the exiled player."
        },
        "agents": {
            "type": "array",
            "description": "Configuration for each agent playing the game.",
            "default": [
                { "id": "Player 1", "role": "Werewolf", "agent_id": "random"},
                { "id": "Player 2", "role": "Werewolf", "agent_id": "random"},
                { "id": "Player 3", "role": "Seer", "agent_id": "random"},
                { "id": "Player 4", "role": "Doctor", "agent_id": "random"},
                { "id": "Player 5", "role": "Villager", "agent_id": "random"},
                { "id": "Player 6", "role": "Villager", "agent_id": "random"},
                { "id": "Player 7", "role": "Villager", "agent_id": "random"}
            ],
            "items": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique name of the player. Visible to everyone."
                    },
                    "display_name": {
                        "type": "string",
                        "description": "The display name of the agent. Visible only to the UI but not to players.",
                        "default": ""
                    },
                    "agent_id": {
                        "type": "string",
                        "description": "The id of the agent. Might not be unique since different players might be using the same underlying agent. Not visible to everyone."
                    },
                    "role": {
                        "type": "string",
                        "enum": ["Werewolf", "Doctor", "Seer", "Villager"],
                        "description": "The role assigned to the player."
                    },
                    "role_params": {
                        "type": "object",
                        "description": "The parameter dict for the selected Role subclass.",
                        "default": {}
                    },
                    "thumbnail": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URL for the player's thumbnail image.",
                        "default": ""
                    },
                    "agent_harness_name": {
                        "type": "string",
                        "description": "The name of the agent harness to use.",
                        "default": ""
                    },
                    "chat_mode": {
                        "type": "string",
                        "description": "Select between chat mode or text mode to prompt the LLM to produce different style of response.",
                        "default": "text",
                        "enum": ["text", "audio"]
                    },
                    "enable_bid_reasoning": {
                        "type": "boolean",
                        "description": "Determine whether to prompt LLM to generate reasoning for bidding or not.",
                        "default": false
                    },
                    "llms": {
                        "type": "array",
                        "description": "A list of Language Learning Models to be used by the agent.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "model_name": {
                                    "type": "string",
                                    "description": "The name of the LLM."
                                },
                                "parameters": {
                                    "type": "object",
                                    "description": "Parameters specific to this LLM.",
                                    "default": {}
                                }
                            },
                            "required": ["model_name"]
                        },
                        "default": []
                    }
                },
                "required": ["id", "role"]
            }
        },
        "discussion_protocol": {
            "description": "Configuration for the daytime discussion protocol.",
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the discussion protocol to use.",
                    "type": "string",
                    "enum": ["RoundRobinDiscussion", "ParallelDiscussion", "TurnByTurnBiddingDiscussion", "RoundByRoundBiddingDiscussion"],
                    "default": "RoundRobinDiscussion"
                },
                "params": {
                    "description": "Parameters for the selected discussion protocol.",
                    "type": "object",
                    "default": {},
                    "properties": {}
                }
            },
            "default": { "name": "RoundRobinDiscussion", "params": { "max_rounds": 1 } },
            "oneOf": [
                {
                    "if": { "properties": { "name": { "const": "RoundRobinDiscussion" } } },
                    "then": {
                        "properties": {
                            "params": {
                                "type": "object",
                                "properties": {
                                    "max_rounds": { "description": "Number of full rounds of discussion.", "type": "integer", "minimum": 1, "default": 1 },
                                    "assign_random_first_speaker": {
                                        "description":  "Wether to assign a random player as the first speaker",
                                        "type":  "boolean",
                                        "default":  true
                                    }
                                },
                                "additionalProperties": false
                            }
                        }
                    },
                    "else": false
                },
                {
                    "if": { "properties": { "name": { "const": "ParallelDiscussion" } } },
                    "then": {
                        "properties": {
                            "params": {
                                "type": "object",
                                "properties": {
                                    "ticks": { "description": "Number of ticks where all players can speak simultaneously.", "type": "integer", "minimum": 1, "default": 3 }
                                },
                                "additionalProperties": false
                            }
                        }
                    },
                    "else": false
                },
                {
                    "if": { "properties": { "name": { "const": "TurnByTurnBiddingDiscussion" } } },
                    "then": {
                        "properties": {
                            "params": {
                                "type": "object",
                                "properties": {
                                    "bidding": { "type": "object" },
                                    "max_turns": { "type": "integer", "minimum": 1, "default": 5 },
                                    "bid_result_public": { "type": "boolean", "default": true }
                                },
                                "additionalProperties": false
                            }
                        }
                    },
                    "else": false
                },
                {
                    "if": { "properties": { "name": { "const": "RoundByRoundBiddingDiscussion" } } },
                    "then": {
                        "properties": {
                            "params": {
                                "type": "object",
                                "properties": {
                                    "bidding": { "type": "object" },
                                    "max_rounds": { "type": "integer", "minimum": 1, "default": 2 },
                                    "bid_result_public": { "type": "boolean", "default": true }
                                },
                                "additionalProperties": false
                            }
                        }
                    },
                    "else": false
                }
            ]
        },
        "day_voting_protocol": {
            "description": "Configuration for the daytime voting protocol.",
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the voting protocol to use.",
                    "type": "string",
                    "enum": ["SimultaneousMajority", "SequentialVoting"],
                    "default": "SequentialVoting"
                },
                "params": {
                    "description": "Parameters for the selected voting protocol.",
                    "type": "object",
                    "default": {},
                    "properties": {}
                }
            },
            "default": { "name": "SequentialVoting", "params": { "assign_random_first_voter": true, "tie_break": "random" } },
            "oneOf": [
                {
                    "if": { "properties": { "name": { "const": "SimultaneousMajority" } } },
                    "then": {
                        "properties": {
                            "params": { "type": "object", "properties": {}, "additionalProperties": true }
                        }
                    },
                    "else": false
                },
                {
                    "if": { "properties": { "name": { "const": "SequentialVoting" } } },
                    "then": {
                        "properties": {
                            "params": { "type": "object", "properties": {}, "additionalProperties": true }
                        }
                    },
                    "else": false
                }
            ]
        },
        "werewolf_night_vote_protocol": {
            "description": "Configuration for the werewolf night voting protocol.",
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the voting protocol to use.",
                    "type": "string",
                    "enum": ["SimultaneousMajority", "SequentialVoting"],
                    "default": "SequentialVoting"
                },
                "params": {
                    "description": "Parameters for the selected voting protocol.",
                    "type": "object",
                    "default": {},
                    "properties": {}
                }
            },
            "default": { "name": "SequentialVoting", "params": { "assign_random_first_voter": true, "tie_break": "random" } },
            "oneOf": [
                {
                    "if": { "properties": { "name": { "const": "SimultaneousMajority" } } },
                    "then": {
                        "properties": {
                            "params": { "type": "object", "properties": {}, "additionalProperties": true }
                        }
                    },
                    "else": false
                },
                {
                    "if": { "properties": { "name": { "const": "SequentialVoting" } } },
                    "then": {
                        "properties": {
                            "params": { "type": "object", "properties": {}, "additionalProperties": true }
                        }
                    },
                    "else": false
                }
            ]
        }
    },
    "observation": {
      "remainingOverageTime": 2
    },
    "action": { "type": "object", "additionalProperties": true },
    "reward": {
        "type": "number",
        "minimum": -1,
        "maximum": 1
    }
}
